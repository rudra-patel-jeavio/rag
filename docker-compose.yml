version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: rag-postgres
    environment:
      POSTGRES_DB: rag_db
      POSTGRES_USER: rag_user
      POSTGRES_PASSWORD: rag_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rag_user -d rag_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rag-app:
    build: .
    container_name: rag-app
    ports:
      - "8501:8501"
    environment:
      DATABASE_URL: postgresql://rag_user:rag_password@postgres:5432/rag_db
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      COHERE_API_KEY: ${COHERE_API_KEY:-}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY:-}
      GROQ_API_KEY: ${GROQ_API_KEY:-}
      EMBEDDING_MODEL_TYPE: ${EMBEDDING_MODEL_TYPE:-openai}
      EMBEDDING_MODEL_NAME: ${EMBEDDING_MODEL_NAME:-text-embedding-ada-002}
      CHUNK_SIZE: ${CHUNK_SIZE:-500}
      CHUNK_OVERLAP: ${CHUNK_OVERLAP:-50}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: rag-network 